// 单行文本不换行
.no-wrap {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

// 扩展点击区域（移动端适用）
.extend-click {
    position: relative;
    &:before {
        content: "";
        position: absolute;
        top: -10px;
        left: -10px;
        right: -10px;
        bottom: -10px;
    }
}

// 禁止选中
.no-select {
    user-select: none;
}

// 禁止点击
.no-click {
    pointer-events: none;
}

/** 多行文本不换行
usage: 
.txt{
    @include mul-line(3) // 只显示三行，超出显示省略号
**/
@mixin mul-line($line: 2) {
    overflow: hidden;
    word-break: break-all;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
}

/**自定义placeholder样式
usage:
    input{
        @include self-placeholder(18px,#999,left)
    }
*/
@mixin self-placeholder($fz: 16px, $color: #999, $align: left) {
    &:-moz-placeholder {
        font-size: $fz;
        color: $color;
        text-align: $align;
    }
    &:-ms-input-placeholder {
        font-size: $fz;
        color: $color;
        text-align: $align;
    }
    &:-webkit-input-placeholder {
        font-size: $fz;
        color: $color;
        text-align: $align;
    }
}

/*自定义文本选中样式
usage:
    .div{
        @include self-select(#333,#fff)
    }
*/
@mixin self-select($color: #999, $bgColor: #eee) {
    &::selection {
        color: $color;
        background-color: $bgColor;
    }
}

// 1px边框
@mixin thinBorder(
    $directionMaps: bottom,
    $color: #ccc,
    $radius: (
        0,
        0,
        0,
        0
    ),
    $position: after
) {
    // 是否只有一个方向
    $isOnlyOneDir: string==type-of($directionMaps);

    @if ($isOnlyOneDir) {
        $directionMaps: ($directionMaps);
    }

    @each $directionMap in $directionMaps {
        border-#{$directionMap}: 1px solid $color;
    }

    // 判断圆角是list还是number
    @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) nth($radius, 2) nth($radius, 3) nth($radius, 4);
    } @else {
        border-radius: $radius;
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        & {
            position: relative;

            // 删除1像素密度比下的边框
            @each $directionMap in $directionMaps {
                border-#{$directionMap}: none;
            }
        }

        &:#{$position} {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            width: 200%;
            height: 200%;
            transform: scale(0.5);
            box-sizing: border-box;
            padding: 1px;
            transform-origin: 0 0;
            pointer-events: none;
            border: 0 solid $color;

            @each $directionMap in $directionMaps {
                border-#{$directionMap}-width: 1px;
            }

            // 判断圆角是list还是number
            @if (list==type-of($radius)) {
                border-radius: nth($radius, 1) * 2 nth($radius, 2) * 2 nth($radius, 3) * 2 nth($radius, 4) * 2;
            } @else {
                border-radius: $radius * 2;
            }
        }
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 3) {
        &:#{$position} {
            // 判断圆角是list还是number
            @if (list==type-of($radius)) {
                border-radius: nth($radius, 1) * 3 nth($radius, 2) * 3 nth($radius, 3) * 3 nth($radius, 4) * 3;
            } @else {
                border-radius: $radius * 3;
            }

            width: 300%;
            height: 300%;
            transform: scale(0.33);
        }
    }
}
